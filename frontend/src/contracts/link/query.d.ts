// Generated by dedot cli

import type { GenericSubstrateApi } from 'dedot/types';
import type { BytesLike, Result, Bytes, Hash } from 'dedot/codecs';
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractCallResult,
} from 'dedot/contracts';
import type { LinkSlugCreationMode, LinkShorteningOutcome, LinkError, InkPrimitivesLangError } from './types';

export interface ContractQuery<ChainApi extends GenericSubstrateApi> extends GenericContractQuery<ChainApi> {
  /**
   * Create a a new mapping or use an existing one.
   *
   * @param {LinkSlugCreationMode} slug
   * @param {BytesLike} url
   * @param {ContractCallOptions} options
   *
   * @selector 0x92ccc180
   **/
  shorten: GenericContractQueryCall<
    ChainApi,
    (
      slug: LinkSlugCreationMode,
      url: BytesLike,
      options: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<Result<LinkShorteningOutcome, LinkError>, InkPrimitivesLangError>,
        ContractCallResult<ChainApi>
      >
    >
  >;

  /**
   * Resolve a slug to its mapped URL.
   *
   * @param {BytesLike} slug
   * @param {ContractCallOptions} options
   *
   * @selector 0x9e30d65d
   **/
  resolve: GenericContractQueryCall<
    ChainApi,
    (
      slug: BytesLike,
      options: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<Result<Bytes | undefined, InkPrimitivesLangError>, ContractCallResult<ChainApi>>
    >
  >;

  /**
   * Change the code of this contract.
   *
   * This can only be called by the upgrader specified at contract construction.
   * The code cannot be changed in case no upgrader was set because the
   * [`unstoppable`] constructor was used.
   *
   * @param {Hash} codeHash
   * @param {ContractCallOptions} options
   *
   * @selector 0x9852f7b0
   **/
  upgrade: GenericContractQueryCall<
    ChainApi,
    (
      codeHash: Hash,
      options: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<Result<Result<[], LinkError>, InkPrimitivesLangError>, ContractCallResult<ChainApi>>
    >
  >;
}
